% -*-coding: latin-9;-*-

\usepackage[T1]{fontenc}
\usepackage{amsmath,wasysym,marvosym,soul}
\usepackage{multicol,tikz}

% To draw diagonal line on some text:
\usepackage[thicklines]{cancel}
\renewcommand{\CancelColor}{\red}

\usepackage[hyper,procnames]{listings}
\usepackage{alltt}%verbatim,
%\usepackage[linkbordercolor={1 1 1},bookmarks=true,colorlinks=false,urlbordercolor={1 1 1},runbordercolor={1 1 1},citebordercolor={1 1 1},bookmarksnumbered=true,hypertexnames=false,hyperindex]{hyperref}
%usepackage{tabularx}

%\usepackage{beamer_rk}
%\usepackage[LeftSideBar,WhiteBackground]{beamer_AMD}
\usepackage[WhiteBackground,NoHeadLineSep]{beamer_SYCL}
%\usepackage[WhiteBackground]{beamer_rk}


\usepackage{perso2e,bbold2e,getVersion,exemple}
%\usepackage{beamer_rk,perso2e,bbold2e,LienPDF,example}
\usepackage{makeidx}
%\usepackage{multicol,tabularx}
\usepackage{pst-node}

% Remove french or obsolete francais for now because it is
% incompatible with balloon_rk.sty using lstlistings and tikzmark
%\usepackage[greek,french,english]{babel}
\usepackage[greek,english]{babel}
% Incompatible with balloon in lstlistings
\iffalse
\frenchbsetup{og=«, fg=», ThinColonSpace=true,
  % ShowOptions,
  % Évite de casser les références bibliographiques du style harvard avec
  % des ":" dedans :
  %AutoSpacePunctuation=false
}
% S'arrange pour avoir une virgule qui ne rajoute pas de blanc dans les
% nombres à virgule :
%\iffalse
\DecimalMathComma
\fi

% Même pas besoin pour les ligatures à 2 accents en fait :
%\languageattribute{greek}{polutoniko}

% Et pour avoir \nombre qui marche :
%\usepackage[autolanguage]{numprint}
% Base language

% \todo: combine into SYCL
\lstdefinelanguage{OpenCL}
{sensitive=true,
  morekeywords=[3]{%
    cl_char,
    cl_uchar,
    uchar,
    cl_short,
    cl_ushort,
    ushort,
    cl_int,
    cl_uint,
    uint,
    cl_long,
    cl_ulong,
    ulong,
    cl_half,
    half,
    cl_float,
    cl_double,
    cl_GLuint,
    cl_GLint,
    cl_GLenum,
    cl_platform_id,
    cl_device_id,
    cl_context,
    cl_command_queue,
    cl_mem,
    cl_program,
    cl_kernel,
    cl_event,
    cl_sampler,
    cl_bool,
    bool,
    size_t,
    ptrdiff_t,
    intptr_t,
    uintptr_t,
    image1d_t,
    image1d_buffer_t,
    image1d_array_t,
    image2d_t,
    image2d_array_t,
    image2d_depth_t,
    image2d_array_depth_t,
    image3d_t,
    sampler_t,
    clk_event_t,
    ndrange_t,
    ndrange_1D,
    ndrange_2D,
    ndrange_3D,
    enqueue_kernel,
    CLK_ENQUEUE_FLAGS_WAIT_KERNEL,
    queue_t,
    get_default_queue,
    reserve_id_t,
    __global,
    __constant,
    __local,
    __private,
    __generic,
    __kernel,
    global,
    constant,
    local,
    private,
    generic,
    kernel,
    __read_write,
    read_write,
    __read_only,
    read_only,
    __write_only,
    write_only,
    __attribute__,
    aligned,
    endian,
    host,
    opencl_unroll_hint,
    nosvm,
    packed,
    cl_bitfield,
    cl_device_type,
    cl_platform_info,
    cl_device_info,
    cl_device_fp_config,
    cl_device_mem_cache_type,
    cl_device_local_mem_type,
    cl_device_exec_capabilities,
    cl_device_svm_capabilities,
    cl_command_queue_properties,
    cl_device_partition_property,
    cl_device_affinity_domain,
    cl_context_properties,
    cl_context_info,
    cl_queue_properties,
    cl_command_queue_info,
    cl_channel_order,
    cl_channel_type,
    cl_mem_flags,
    cl_svm_mem_flags,
    cl_mem_object_type,
    cl_mem_info,
    cl_mem_migration_flags,
    cl_image_info,
    cl_buffer_create_type,
    cl_addressing_mode,
    cl_filter_mode,
    cl_sampler_info,
    cl_map_flags,
    cl_pipe_properties,
    cl_pipe_info,
    cl_program_info,
    cl_program_build_info,
    cl_program_binary_type,
    cl_build_status,
    cl_kernel_info,
    cl_kernel_arg_info,
    cl_kernel_arg_address_qualifier,
    cl_kernel_arg_access_qualifier,
    cl_kernel_arg_type_qualifier,
    cl_kernel_work_group_info,
    cl_event_info,
    cl_command_type,
    cl_profiling_info,
    cl_sampler_properties,
    cl_kernel_exec_info,
    cl_image_format,
    cl_image_desc,
    cl_buffer_region,
    CL_FALSE,
    CL_TRUE,
  }
}

\lstdefinelanguage{SYCL}[]{C++}
{sensitive=true,
  % Some missing C++ keywords
  morekeywords=[1]{
    constexpr,
    mutex,
    size_t,
    shared_ptr,
    std,
    unique_ptr,
  },
  % terminology (NDRange, Compute Unit, ...)
  morekeywords=[2]{
    accessor,
    access,
    async_exception,
    atomic,
    buffer,
    constant_ptr,
    context,
    cpu_selector,
    default_selector,
    device,
    device_selector,
    device_selector,
    event,
    exception,
    exception_list,
    exception_ptr,
    exception_ptr_class,
    function_class,
    global_ptr,
    gpu_selector,
    group,
    handler,
    hash_class,
    h_item,
    host_selector,
    id,
    image,
    item,
    kernel,
    local_accessor,
    local_ptr,
    multi_ptr,
    mutex_class,
    nd_item,
    nd_range,
    platform,
    private_memory,
    private_ptr,
    program,
    property,
    property_list,
    queue,
    range,
    sampler,
    shared_ptr_class,
    storage,
    stream,
    string_class,
    sycl,
    vec,
    vector_class,
    weak_ptr_class,
  },
  % structural keywords and functions (parallel_for)
  morekeywords=[3]{
    barrier,
    get,
    get_access,
    parallel_for,
    parallel_for_work_group,
    parallel_for_work_item,
    single_task,
    submit,
  },
  % 
  % data types (int4)
  morekeywords=[4]{
    char2, char3, char4, char8, char16,
    double2,double3,double4,double8,double16,
    float2,float3,float4,float8,float16,
    half,half2,half3,half4,half8,half16,
    int2,int3,int4,int8,int16,
    long2,long3,long4,long8,long16,
    longlong2,longlong3,longlong4,longlong8,longlong16,
    schar2, schar3, schar4, schar8, schar16,
    short2, short3, short4, short8, short16,
    uchar2, uchar3, uchar4, uchar8, uchar16,
    uint2,uint3,uint4,uint8,uint16,
    ulong2,ulong3,ulong4,ulong8,ulong16,
    ulonglong2,ulonglong3,ulonglong4,ulonglong8,ulonglong16,
    ushort2, ushort3, ushort4, ushort8, ushort16,
  },
  % Generic types (Gen, SGen, GenVec, ...)
  morekeywords=[5]{
    genchar, charn,
    genfloatd, doublen,
    genfloatf, floatn,
    genfloath, halfn,
    genfloat, sgenfloat,
    gengeofloat, gengeodouble,
    geninteger32bit, geninteger64bit,
    geninteger8bit, geninteger16bit,
    geninteger, sgeninteger, genintegerNbit,
    genint, intn,
    genlonglong, longlongn,
    genlong, longn,
    genshort, shortn,
    gentype, genhalf, genvector,
    igenchar, scharn,
    igeninteger32bit, igeninteger64bit,
    igeninteger8bit, igeninteger16bit,
    igeninteger, igenintegerNbit,
    igenlonginteger, ugenlonginteger,
    ugenchar, ucharn,
    ugeninteger32bit, ugeninteger64bit,
    ugeninteger8bit, ugeninteger16bit,
    ugeninteger, ugenintegerNbit,
    ugenint, uintn,
    ugenlonglong, ulonglongn,
    ugenlong, ulongn,
    ugenshort, ushortn,
  },
  % OpenCL compatibility (cl_bool...)
  morekeywords=[6]{
    __kernel,
    __read_only,
    __write_only,
    __read_write,
    cl,
    cl_bool,
    cl_char,
    cl_char16,
    cl_char2,
    cl_char3,
    cl_char4,
    cl_char8,
    cl_command_queue,
    cl_double,
    cl_double16,
    cl_double2,
    cl_double3,
    cl_double4,
    cl_double8,
    cl_event,
    cl_exception,
    cl_float,
    cl_float16,
    cl_float2,
    cl_float3,
    cl_float4,
    cl_float8,
    cl_half,
    cl_half16,
    cl_half2,
    cl_half3,
    cl_half4,
    cl_half8,
    cl_int,
    cl_int16,
    cl_int2,
    cl_int3,
    cl_int4,
    cl_int8,
    cl_kernel,
    cl_long,
    cl_long16,
    cl_long2,
    cl_long3,
    cl_long4,
    cl_long8,
    cl_mem,
    cl_pipe,
    cl_program,
    cl_sampler,
    cl_short,
    cl_short16,
    cl_short2,
    cl_short3,
    cl_short4,
    cl_short8,
    cl_uchar,
    cl_uchar16,
    cl_uchar2,
    cl_uchar3,
    cl_uchar4,
    cl_uchar8,
    cl_uint,
    cl_uint16,
    cl_uint2,
    cl_uint3,
    cl_uint4,
    cl_uint8,
    cl_ulong,
    cl_ulong16,
    cl_ulong2,
    cl_ulong4,
    cl_ulong8,
    cl_ushort,
    cl_ushort16,
    cl_ushort2,
    cl_ushort3,
    cl_ushort4,
    cl_ushort8,
  },
  morekeywords=[7]{
    SYCL_EXTERNAL,
  },
}

%\lstset{extendedchars=true, language=C++, basicstyle=\scriptsize\ttfamily, numbers=left,
% By default use the SYCL language
\lstset{extendedchars=true, language=SYCL, basicstyle=\small,
  % Use fixed char width everywhere
  columns=fixed,
  tabsize=8, tab=\rightarrowfill, keywordstyle=\color{orange}\bf\underbar,
  stringstyle=\rmfamily, commentstyle=\rmfamily\itshape,
  %alsolanguage=OpenCL,
  escapechar=¾,
  % Normal C++ keywords
  keywordstyle=[1]\color[rgb]{0,0,0.75},
  % terminology (NDRange, Compute Unit, ...)
  keywordstyle=[2]\color{VioletRed1},
  % structural keywords and functions (parallel_for)
  keywordstyle=[3]\color{Turquoise3},
  % data types (int4)
  keywordstyle=[4]\color{DarkOrchid3},
  % Generic types (Gen, SGen, GenVec, ...)
  keywordstyle=[5]\color{Magenta1},
  % OpenCL compatibility (cl_bool...)
  keywordstyle=[6]\color{OrangeRed1},
  % Macros
  keywordstyle=[7]\color{OliveDrab2},
  commentstyle=\color[rgb]{0.133,0.545,0.133},
  stringstyle=\color[rgb]{0.639,0.082,0.082}
}
% Un peu violent :
%  index=[1][keywords],indexprocnames=true%\lstloadlanguages{Basic}


%\usepackage{beamerthemesplit}
%{\usebeamercolor{palette primary}}
%\setbeamertemplate{sidebar canvas}[vertical shading][top=palette primary.bg,middle=white,bottom=palette primary.bg]

\makeindex

%\usepackage[dvips]{preview}
%\PreviewEnvironment{trans}
%\PreviewEnvironment{frame}

\newcommand{\FigCentreTourne}[1]{\centerline{\includegraphics[width=\vsize,angle=-90]{#1}}}
%\newcommand{\boiteblanc}[1]{\psframebox*[fillcolor=papayawhip]{#1}}
\newcommand{\boiteblanc}[1]{\psframebox*[fillcolor=NavajoWhite1]{#1}}

%\DealWithTwoUp

%\newcommand{\reddrawline}{{\red \noindent\leavevmode\hrulefill}}

\newcommand{\Idee}{{\red\Handwash}\xspace}
%\Stopsign \Laserbeam \Estatically \Attention \Idee
%\FilledRainCloud\Coffeecup

\newcommand{\Cnn}{C$_{99}$\xspace}

%% Plan plus petit :
%\renewcommand{\OutlineFontSize}{\scriptsize}
% Plan en une colonne :
\renewcommand{\OutlineColumnNumbers}{1}
\renewcommand\outlinename{Outline}


\usetheme{gtc}
\usecolortheme{gtc}
